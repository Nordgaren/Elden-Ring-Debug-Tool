<Window x:Class="Elden_Ring_Debug_Tool_WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wpfTool="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:Elden_Ring_Debug_Tool_WPF"
        xmlns:view="clr-namespace:Elden_Ring_Debug_Tool_WPF.Views"
        xmlns:ctrl="clr-namespace:Elden_Ring_Debug_Tool_WPF.Controls"
        xmlns:viewModel="clr-namespace:Elden_Ring_Debug_Tool_ViewModels.ViewModels;assembly=Elden-Ring-Debug-Tool-ViewModels"
        xmlns:dock="https://github.com/Dirkster99/AvalonDock"
        mc:Ignorable="d"
        Title="Elden Ring Debug Tool" Height="600" Width="800" MinHeight="600" MinWidth="800" Icon="Icon.ico" Loaded="Window_Loaded" Closing="Window_Closing" Background="{StaticResource Background}" 
        WindowStyle="None" ResizeMode="CanResizeWithGrip" AllowsTransparency="True" BorderThickness="7" >

    <Window.DataContext>
        <viewModel:MainWindowViewModel x:Name="MainWindowViewModel"/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="15"/>
        </Grid.RowDefinitions>
        <StackPanel>
            <Grid Height="25" MouseMove="UIElement_OnMouseMove" MouseDown="UIElement_OnMouseDown" Background="{StaticResource Background}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="Icon.ico" Width="25"/>
                    <Label Content="{Binding WindowTitle}" Foreground="{StaticResource Foreground}"/>
                    <Menu Background="{StaticResource Background}" Foreground="{StaticResource Foreground}" VerticalAlignment="Center">
                        <MenuItem Header="Tools">
                            <MenuItem Header="Params" IsChecked="{Binding IsVisible, ElementName=Params, Mode=TwoWay}" IsCheckable="True" />
                            <MenuItem Header="Player" IsChecked="{Binding IsVisible, ElementName=Player, Mode=TwoWay}" IsCheckable="True" />
                            <MenuItem Header="Inventory" IsChecked="{Binding IsVisible, ElementName=Inventory, Mode=TwoWay}" IsCheckable="True" />
                            <MenuItem Header="Target" IsChecked="{Binding IsVisible, ElementName=Target, Mode=TwoWay}" IsCheckable="True" />
                            <MenuItem Header="Grace" IsChecked="{Binding IsVisible, ElementName=Grace, Mode=TwoWay}" IsCheckable="True" />
                            <MenuItem Header="Debug" IsChecked="{Binding IsVisible, ElementName=Debug, Mode=TwoWay}" IsCheckable="True" />
                            <MenuItem Header="HotKey" IsChecked="{Binding IsVisible, ElementName=HotKey, Mode=TwoWay}" IsCheckable="True" />
                            <MenuItem Header="Gestures" IsChecked="{Binding IsVisible, ElementName=Gestures, Mode=TwoWay}" IsCheckable="True" />
                            <MenuItem Header="Settings" IsChecked="{Binding IsVisible, ElementName=Settings, Mode=TwoWay}" IsCheckable="True" />
                        </MenuItem>

                    </Menu>
                </StackPanel>
                <StackPanel Orientation="Horizontal" 
                        HorizontalAlignment="Right">
                    <Button
                        Content="➖"
                        VerticalAlignment="Center"
                        Width="20"
                        Height="20"
                        FontWeight="Bold"
                        Background="Transparent"
                        Foreground="White"
                        Click="Minimize_Click"
                        BorderThickness="0"/>

                    <Button
                        Content="☐"
                        VerticalAlignment="Center"
                        Width="20"
                        Height="20"
                        FontWeight="Bold"
                        Background="Transparent"
                        Foreground="White"
                        Click="Maximize_Click"
                        BorderThickness="0"/>
                    <Button
                        Content="❌"
                        Width="20"
                        Height="20"
                        Background="Transparent"
                        Foreground="White"
                        Click="MainWindowClose_Click"
                        BorderThickness="0"/>
                </StackPanel>

            </Grid>
        </StackPanel>

        <StackPanel Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center">
            <StackPanel Orientation="Horizontal">
                <Label Content="Process:" FontWeight="ExtraBlack"/>
                <Label Content="{Binding ID}" FontWeight="ExtraBlack" Foreground="{Binding ForegroundId}"/>
            </StackPanel>
        </StackPanel >
        <StackPanel Grid.Row="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center">
            <StackPanel Orientation="Horizontal">
                <Label Content="Loaded:" FontWeight="ExtraBlack"/>
                <Label Content="{Binding ContentLoaded}" FontWeight="ExtraBlack" Foreground="{Binding ForegroundLoaded}"/>
            </StackPanel>
        </StackPanel >
        <StackPanel Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,15,0">
            <Label >
                <Hyperlink Command="{Binding OpenGitHubCommand}" IsEnabled="{Binding UpdateRequired}">
                    <TextBlock Style="{DynamicResource HyperlinkStyle}" Text="{Binding UpdateInfo}" FontWeight="ExtraBlack"/>
                </Hyperlink>
            </Label>
        </StackPanel>

        <dock:DockingManager Grid.Row="1" x:Name="DockingManager" AllowMixedOrientation="True" >
            <DockingManager.Theme>
                <Vs2013DarkTheme></Vs2013DarkTheme>
            </DockingManager.Theme>
            <dock:LayoutRoot>
                <dock:LayoutPanel Orientation="Horizontal">
                    <dock:LayoutAnchorablePane>
                        <dock:LayoutAnchorable ContentId="Params" Title="Params" CanHide="True" CanClose="False" x:Name="Params" CanDockAsTabbedDocument="False">
                            <view:ParamView
                                DataContext="{Binding DataContext.ParamViewViewModel,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />

                        </dock:LayoutAnchorable>

                        <dock:LayoutAnchorable ContentId="Player" Title="Player" CanHide="True" CanClose="False" x:Name="Target" CanDockAsTabbedDocument="False">
                            <view:PlayerView DataContext="{Binding DataContext.PlayerViewViewModel, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                        </dock:LayoutAnchorable>

                        <dock:LayoutAnchorable ContentId="Inventory" Title="Inventory" CanHide="True" CanClose="False" x:Name="Inventory" CanDockAsTabbedDocument="False">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <view:ItemGibView Grid.Column="0"
                                    DataContext="{Binding DataContext.ItemGibViewViewModel, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                                <view:InventoryView Grid.Column="1"
                                                    DataContext="{Binding DataContext.InventoryViewViewModel,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>

                            </Grid>
                        </dock:LayoutAnchorable>

                        <dock:LayoutAnchorable ContentId="Target" Title="Target" CanHide="True" CanClose="False" x:Name="Player" CanDockAsTabbedDocument="False">
                            <view:TargetView DataContext="{Binding DataContext.TargetViewViewModel, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                        </dock:LayoutAnchorable>

                        <dock:LayoutAnchorable ContentId="Grace" Title="Grace" CanHide="True" CanClose="False" x:Name="Grace" CanDockAsTabbedDocument="False">
                            <view:GraceView DataContext="{Binding DataContext.GraceViewViewModel, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                        </dock:LayoutAnchorable>
                        
                        <dock:LayoutAnchorable ContentId="Gestures" Title="Gestures" CanHide="True" CanClose="False" x:Name="Gestures" CanDockAsTabbedDocument="False">
                            <view:GestureView DataContext="{Binding DataContext.GestureViewViewModel, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                        </dock:LayoutAnchorable>

                        <dock:LayoutAnchorable ContentId="HotKey" Title="HotKey" CanHide="True" CanClose="False" x:Name="HotKey" CanDockAsTabbedDocument="False">
                            <view:HotKeyView DataContext="{Binding DataContext.HotKeyViewViewModel,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                        </dock:LayoutAnchorable>

                        <dock:LayoutAnchorable ContentId="Debug" Title="Debug" CanHide="True" CanClose="False" x:Name="Debug" CanDockAsTabbedDocument="False">
                            <view:DebugView DataContext="{Binding DataContext.DebugViewViewModel,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                        </dock:LayoutAnchorable>

                        <dock:LayoutAnchorable ContentId="Settings" Title="Settings" CanHide="True" CanClose="False" x:Name="Settings" CanDockAsTabbedDocument="False">
                            <view:SettingsView DataContext="{Binding DataContext.SettingsViewViewModel,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                        </dock:LayoutAnchorable>

                        <dock:LayoutAnchorable ContentId="Misc" Title="Misc" CanHide="True" CanClose="False" x:Name="Misc" CanDockAsTabbedDocument="False">
                            <view:MiscView DataContext="{Binding DataContext.MiscViewViewModel,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                        </dock:LayoutAnchorable>
                    </dock:LayoutAnchorablePane>

                </dock:LayoutPanel>
            </dock:LayoutRoot>
        </dock:DockingManager>

    </Grid>
</Window>