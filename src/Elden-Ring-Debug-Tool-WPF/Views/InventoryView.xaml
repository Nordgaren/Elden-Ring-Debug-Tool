<UserControl x:Class="Elden_Ring_Debug_Tool_WPF.Views.InventoryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Elden_Ring_Debug_Tool_WPF.Views" 
             xmlns:wpfTool="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:vm="clr-namespace:Elden_Ring_Debug_Tool_ViewModels.ViewModels;assembly=Elden-Ring-Debug-Tool-ViewModels"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="400" d:Background="{StaticResource Background}" DataContextChanged="OnDataContextChanged"
             d:DataContext="{d:DesignInstance vm:InventoryViewViewModel, IsDesignTimeCreatable=True}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="200"/>
            <RowDefinition Height="20"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel>
            <TextBlock Style="{DynamicResource TextBlockStyle}" Text="Inventory" HorizontalAlignment="Center" FontSize="20" FontWeight="ExtraBlack" Margin="0,20,0,0"  Grid.Row="0"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <ToggleButton HorizontalAlignment="Center" Content="Inventory" Width="70" IsChecked="{Binding ShowStorage, Converter={StaticResource ResourceKey=InverseBoolConverter}}"/>
                <ToggleButton HorizontalAlignment="Center" Content="Storage" Width="70" IsChecked="{Binding ShowStorage}"/>
            </StackPanel>
            <GroupBox Header="Inventory Counts">
                <StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Label Content="Count:" FontWeight="Bold"/>
                        <Label Content="{Binding HeldNormalItems}" FontWeight="Bold"/>
                        <Label Content="/" FontWeight="Bold"/>
                        <Label Content="{Binding InventoryMax}" FontWeight="Bold"/>
                    </StackPanel>
                    <Separator Visibility="Hidden"/>
                    <Grid HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width ="100"/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Normal Items:" FontWeight="Bold"  Grid.Column="0"/>
                        <wpfTool:IntegerUpDown Value="{Binding HeldNormalItems}" FontWeight="Bold" Width="50" Background="{StaticResource Background}" Foreground="{StaticResource Foreground}"  Grid.Column="1" IsEnabled="{Binding SettingsViewViewModel.EditInventoryCounts}" ShowButtonSpinner="{Binding SettingsViewViewModel.EditInventoryCounts}"/>
                        <Label Content="/" FontWeight="Bold"  Grid.Column="2"/>
                        <Label Content="{Binding MaxNormalItems}" FontWeight="Bold"  Grid.Column="3"/>
                    </Grid>
                    <Separator Visibility="Hidden"/>
                    <Grid  HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width ="94"/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Special Items:" FontWeight="Bold" Grid.Column="0" />
                        <wpfTool:IntegerUpDown Value="{Binding HeldSpecialItems}" FontWeight="Bold" Width="50" Grid.Column="1" Background="{StaticResource Background}" Foreground="{StaticResource Foreground}" IsEnabled="{Binding SettingsViewViewModel.EditInventoryCounts}" ShowButtonSpinner="{Binding SettingsViewViewModel.EditInventoryCounts}"/>
                        <Label Content="/" FontWeight="Bold" Grid.Column="2"/>
                        <Label Content="{Binding MaxSpecialItems}" FontWeight="Bold" Grid.Column="3"/>
                    </Grid>
                </StackPanel>
            
            </GroupBox>
        
        </StackPanel>
        <TextBox Text="{Binding InventoryFilter, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="0" 
                 HorizontalContentAlignment="Center" />

        <TextBlock Text="Search Inventory..." Grid.Row="1" Grid.Column="0" Margin="5,2" MinWidth="50" 
                   HorizontalAlignment="Center" Foreground="DarkGray" 
                   Visibility="{Binding InventoryFilter, Converter={StaticResource ResourceKey=StringToVisibilityConverter}}" 
                   IsHitTestVisible="False"/>

        <DataGrid ItemsSource="{Binding InventoryCollectionView}" Grid.Row="2" Grid.Column="2" AutoGenerateColumns="False" HorizontalScrollBarVisibility="Visible" IsReadOnly="True" Background="{StaticResource Background}">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Remove Item" Foreground="White" Command="{Binding RemoveItemCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGrid}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
                </Style>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
                </Style>
                <Style TargetType="{x:Type DataGridRowHeader}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
                </Style>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="{StaticResource Background}"/>
                    <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
                <DataGridTextColumn Header="Item ID" Binding="{Binding ItemID}"/>
                <DataGridTextColumn Header="Category" Binding="{Binding Category}" MinWidth="50"/>
                <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity}"  MinWidth="60"/>
                <DataGridTextColumn Header="Display ID" Binding="{Binding DisplayID}" MinWidth="75"/>
                <DataGridTextColumn Header="GaItem Handle" Binding="{Binding GaItemHandle}" MinWidth="90"/>
            </DataGrid.Columns>
        </DataGrid>
      

    </Grid>
</UserControl>
